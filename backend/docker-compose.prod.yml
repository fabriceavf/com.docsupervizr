version: '3.7'
services:
  #container de l'application
  application:
    build:
      context: ${BASE_PATH}/images/laravel-php
      args:
        USER_ID: 1000
        GROUP_ID: 1000
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - ${BASE_PATH}/frontend:/var/www/test
      - ${BASE_PATH}/backend:/var/www/html
      - ${BASE_PATH}/apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
      - ${BASE_PATH}/certbot/conf:/etc/letsencrypt
    environment:
      APP_ENV: local
      CONTAINER_ROLE: app-prod
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
    restart: always
    ports:
      - "${APP_HTTP_PORT}:80"
      - "${APP_HTTPS_PORT}:443"
  #le service sheduler de laravel
  echo-server:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - ${BASE_PATH}/backend:/var/www/html
      - ${BASE_PATH}/apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
    environment:
      APP_ENV: local
      CONTAINER_ROLE: echo-server
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_NAME: collect
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
    ports:
      - "${WS_HTTP_PORT}:6001"
  #le service sheduler de laravel
  sheduler:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - ${BASE_PATH}/backend:/var/www/html
      - ${BASE_PATH}/apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
    environment:
      APP_ENV: local
      CONTAINER_ROLE: scheduler
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
    restart: always
  #le service queue de laravel
  queue_default:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - ${BASE_PATH}/backend:/var/www/html
      - ${BASE_PATH}/apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
    environment:
      APP_ENV: local
      CONTAINER_ROLE: queue-default
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_NAME: default
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
  #le service queue de laravel
  queue_analyse:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    volumes:
      - ${BASE_PATH}/backend:/var/www/html
      - ${BASE_PATH}/apache/vhost.conf:/etc/apache2/sites-available/000-default.conf
    environment:
      APP_ENV: local
      CONTAINER_ROLE: queue
      CACHE_DRIVER: redis
      SESSION_DRIVER: redis
      QUEUE_NAME: analyse
      QUEUE_DRIVER: redis
      REDIS_HOST: redis
  #    le service phpmyadmin
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    networks:
      - network
    links:
      - mariadb
    environment:
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - "${PMA_HTTP_PORT}:80"
  #  le service mariadb
  mariadb:
    image: mariadb
    restart: always
    networks:
      - network
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${BASE_PATH}/bdd/mariadb/databases:/var/lib/mysql
      - ${BASE_PATH}/bdd/mariadb/my.cnf:/etc/mysql/conf.d/custom.cnf
    labels:
      - "traefik.enable=false"
#    le service de base de donnees redis
  redis:
    image: redis:latest
    restart: always
    networks:
      - network
    labels:
      - "traefik.enable=false"
#    le service de base de donnees redis
  redis-gui:
    image: redislabs/redisinsight:latest
    restart: always
    networks:
      - network
    ports:
      - "${REDIS_GUI_PORT}:8001"
# le service SFTP
  sftp_admin:
    image: atmoz/sftp
    volumes:
      - ${BASE_PATH}/backend:/home/admin
    ports:
      - "${SFTP_ADMIN_PORT}:22"
    command: admin:${SFTP_ADMIN_PASSWORD}:1001
# le service SFTP
  sftp_superadmin:
    image: atmoz/sftp
    volumes:
      - ${BASE_PATH}:/home/superadmin
    ports:
      - "${SFTP_SUPER_ADMIN_PORT}:22"
    command: superadmin:${SFTP_SUPER_ADMIN_PASSWORD}:1001

  robot:
    image: puppeter-images:latest
    restart: always
    volumes:
      - ${BASE_PATH}/backend/auto/index.js:/puppeteer/index.js
      - ${BASE_PATH}/backend/auto/start.sh:/puppeteer/start.sh
    entrypoint: [ 'sh','start.sh' ]
    networks:
      - network
  #  #le service background all preuves
  python_find_all_preuve:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${BASE_PATH}/backend/autospark:/var/www/html/autospark
      - ${BASE_PATH}/backend/storage:/var/www/html/storage
    entrypoint: [ 'python3','/var/www/html/autospark/analyseProgrammations.py' ]
  #  #le service background nettoyage
  python_nettoyage:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${BASE_PATH}/backend/autospark:/var/www/html/autospark
      - ${BASE_PATH}/backend/storage:/var/www/html/storage
    entrypoint: [ 'python3','/var/www/html/autospark/nettoyage.py' ]
  #  #le service background collect
  python_collect_teleric:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${BASE_PATH}/backend/autospark:/var/www/html/autospark
      - ${BASE_PATH}/backend/storage:/var/www/html/storage
    entrypoint: [ 'python3','/var/www/html/autospark/collect.py' ]
  #  #le service background collect inbio
  python_collect_inbio:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${BASE_PATH}/backend/autospark:/var/www/html/autospark
      - ${BASE_PATH}/backend/storage:/var/www/html/storage
    entrypoint: [ 'python3','/var/www/html/autospark/collect2.py' ]
  #  #le service background collect
  python_pretraitement:
    image: laravel_www:latest
    depends_on:
      - redis
      - mariadb
      - application
    restart: always
    networks:
      - network
    sysctls:
      net.ipv4.ip_unprivileged_port_start: 0
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE_NAME}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${BASE_PATH}/backend/autospark:/var/www/html/autospark
      - ${BASE_PATH}/backend/storage:/var/www/html/storage
    entrypoint: [ 'python3','/var/www/html/autospark/pretraitement.py' ]
  #  #le service imports Agents
networks:
  network:
    driver: bridge

