# Debut glpi.supervizr.net

server {
    listen       80;
    listen  [::]:80;
    server_name  glpi.supervizr.net;
    listen              443 ssl;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    # RSA certificate
    ssl_certificate /etc/nginx/ssl/supervizr.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/nginx/ssl/supervizr.net/privkey.pem; # managed by Certbot
    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;



        client_max_body_size 100M;
        proxy_pass http://host.docker.internal:8230;
        proxy_redirect     off;
        proxy_set_header   Host $host;
    }
    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# Debut portainer.supervizr.net

 server {
     listen       80;
     listen  [::]:80;
     server_name  portainer.supervizr.net;
     listen              443 ssl;
     ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
     ssl_ciphers         HIGH:!aNULL:!MD5;
     # RSA certificate
     ssl_certificate /etc/nginx/ssl/supervizr.net/fullchain.pem; # managed by Certbot
     ssl_certificate_key /etc/nginx/ssl/supervizr.net/privkey.pem; # managed by Certbot
     # Redirect non-https traffic to https
     if ($scheme != "https") {
         return 301 https://$host$request_uri;
     }
     #access_log  /var/log/nginx/host.access.log  main;
     location / {
     proxy_read_timeout 300;


         client_max_body_size 100M;
         proxy_pass http://host.docker.internal:8201;
         proxy_redirect     off;
         proxy_set_header   Host $host;
     }
     # redirect server error pages to the static page /50x.html
     error_page   500 502 503 504  /50x.html;
     location = /50x.html {
         root   /usr/share/nginx/html;
     }
 }
# Debut grafana.supervizr.net

server {
    listen       80;
    listen  [::]:80;
    server_name  grafana.supervizr.net;
    listen              443 ssl;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    # RSA certificate
    ssl_certificate /etc/nginx/ssl/supervizr.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/nginx/ssl/supervizr.net/privkey.pem; # managed by Certbot
    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;



        client_max_body_size 100M;
        proxy_pass http://host.docker.internal:3000;
        proxy_redirect     off;
        proxy_set_header   Host $host;
    }
    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# Debut owncloud.supervizr.net

server {
    listen       80;
    listen  [::]:80;
    server_name  owncloud.supervizr.net;
    listen              443 ssl;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    # RSA certificate
    ssl_certificate /etc/nginx/ssl/supervizr.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/nginx/ssl/supervizr.net/privkey.pem; # managed by Certbot
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;



        client_max_body_size 100M;
        proxy_ssl_session_reuse off;
        proxy_pass http://host.docker.internal:8211;
        proxy_redirect     off;
        proxy_set_header   Host $host;
    }
    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}


# Debut pma-sgs.supervizr.net
server {
    listen       80;
    listen  [::]:80;
    server_name  pma.supervizr.net;
    listen              443 ssl;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    # RSA certificate
    ssl_certificate /etc/nginx/ssl/supervizr.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/nginx/ssl/supervizr.net/privkey.pem; # managed by Certbot
    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;



        client_max_body_size 100M;
        proxy_pass http://host.docker.internal:8103;
        proxy_redirect     off;
        proxy_set_header   Host $host;
    }
    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

# Debut sgs.supervizr.net

server {
    listen       80;
    listen  [::]:80;
    server_name  *.supervizr.net;
    listen              443 ssl;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    # RSA certificate
    ssl_certificate /etc/nginx/ssl/supervizr.net/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/nginx/ssl/supervizr.net/privkey.pem; # managed by Certbot
    # Redirect non-https traffic to https
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }
    #access_log  /var/log/nginx/host.access.log  main;
    location / {
    proxy_read_timeout 300;
    proxy_connect_timeout 300;
    proxy_send_timeout 300;
    add_header Access-Control-Allow-Origin *;



        client_max_body_size 100M;
        proxy_pass http://host.docker.internal:8101;
        proxy_redirect     off;
        proxy_set_header   Host $host;
    }
    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}



